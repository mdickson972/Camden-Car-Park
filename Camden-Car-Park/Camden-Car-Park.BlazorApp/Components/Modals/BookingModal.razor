@using Camden_Car_Park.Common.Models.Enums
@using Camden_Car_Park.Common.Models.Models
@using Camden_Car_Park.Common.Models.ReadModels
@using Camden_Car_Park.Common.Utilities.ExtensionMethods
@inject HttpClient Http
@inherits ComponentBase

@if (IsVisible)
{
    <div class="modal-backdrop" @onclick="Close">
        <div class="modal-content" @onclick:stopPropagation>
            <h4>@Item?.VehicleMake @Item?.VehicleModel</h4>

            <h4>Employee Details</h4>

            <div class="mb-3">
                <label class="form-label"><b>Employee:</b></label>
                <select class="form-select" @bind="Item!.EmployeeId">
                    @foreach (var employee in EmployeesList)
                    {
                        <option value="@employee.Id">@employee.Name</option>
                    }
                </select>
            </div>

            <h4>Vehicle Details</h4>
            
            <div class="mb-3">
                <label class="form-label"><b>Registration:</b></label>
                <input type="text" class="form-control" @bind="Item!.VehicleRegistrationNumber" />
            </div>

            <div class="mb-3">
                <label class="form-label"><b>Make:</b></label>
                <input type="text" class="form-control" @bind="Item!.VehicleMake" />
            </div>

            <div class="mb-3">
                <label class="form-label"><b>Model:</b></label>
                <input type="text" class="form-control" @bind="Item!.VehicleModel" />
            </div>
            
            <div class="mb-3">
                <label class="form-label"><b>Colour:</b></label>
                <input type="text" class="form-control" @bind="Item!.VehicleColour" />
            </div>
            
            <div class="mb-3">
                <label class="form-label"><b>Year:</b></label>
                <input type="text" class="form-control" @bind="Item!.VehicleYear" />
            </div>

            <h4>Booking Details</h4>

            <div class="mb-3">
                <label class="form-label"><b>Approved:</b></label>
                <select class="form-select" @bind="Item!.ApprovalStatus">
                    @foreach (var status in Enum.GetValues<ApprovalStatus>())
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </div>
            
            <div class="mb-3">
                <label class="form-label"><b>Date Approved:</b></label>
                <input type="date" class="form-control" @bind="Item!.ApprovalDate" />
            </div>

            <div class="text-end mt-3">
                <button class="btn btn-primary" @onclick="Save">Save</button>
                <button class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public BookingModalViewModel? Item { get; set; }
    [Parameter] public IEnumerable<EmployeeListItem>? EmployeesList { get; set; }
    [Parameter] public EventCallback OnModalClosed { get; set; }
    
    public bool IsVisible { get; private set; }

    public void Open(BookingResponse? model, IEnumerable<EmployeeListItem>? employeesList)
    {
        Item = model.ToBookingModalViewModel() ?? new BookingModalViewModel();
        EmployeesList = employeesList;
        IsVisible = true;
        StateHasChanged();
    }

    private async Task Close()
    {
        IsVisible = false;
        StateHasChanged();
        await OnModalClosed.InvokeAsync();
    }

    private async Task Save()
    {
        if(Item is null)
        {
            return;
        }

        var request = new BookingRequest()
        {
            BookingId = Item.BookingId,
            EmployeeId = Item.EmployeeId,
            VehicleRegistrationNumber = Item.VehicleRegistrationNumber,
            VehicleMake = Item.VehicleMake,
            VehicleModel = Item.VehicleModel,
            VehicleColour = Item.VehicleColour,
            VehicleYear = Item.VehicleYear,
            ApprovalStatus = Item.ApprovalStatus,
            ApprovalDate = Item.ApprovalDate
        };

        var postBookingResponse = Item.BookingId == 0
        ? await Http.PostAsJsonAsync("Booking/AddBooking", request)
        : await Http.PostAsJsonAsync("Booking/UpdateBooking", request);

        postBookingResponse.EnsureSuccessStatusCode();
        await Close();
    }
}
